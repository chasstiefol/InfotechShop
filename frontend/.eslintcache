[{"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\index.js":"1","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\App.js":"2","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\store.js":"3","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\userReducers.js":"5","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\productReducers.js":"7","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\cartReducers.js":"8","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProductDetailScreen.js":"9","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\SignupScreen.jsx":"10","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\HomeScreen.jsx":"11","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\LoginScreen.jsx":"12","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\CartScreen.jsx":"13","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProductScreen.jsx":"14","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"15","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ShippingScreen.jsx":"16","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\userConstans.js":"17","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\orderConstants.js":"18","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\productConstants.js":"20","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Loader.js":"21","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Rating.js":"22","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\cartActions.js":"23","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\userActions.js":"24","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\productActions.js":"25","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Message.js":"26","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\FormContainer.js":"27","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\userConstants.js":"28","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\CheckoutSteps.js":"29","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\orderActions.js":"30","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\PaymentScreen.jsx":"31","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProfileScreen.jsx":"32","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProductListScreen.jsx":"33","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Paginate.js":"34","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\OrderScreen.jsx":"35","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\OrderListScreen.jsx":"36","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\ListLink.js":"37","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\UserListScreen.jsx":"38","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Review.js":"39"},{"size":584,"mtime":1609139156710,"results":"40","hashOfConfig":"41"},{"size":1923,"mtime":1610437247526,"results":"42","hashOfConfig":"41"},{"size":2582,"mtime":1610443827893,"results":"43","hashOfConfig":"41"},{"size":375,"mtime":1609139156712,"results":"44","hashOfConfig":"41"},{"size":3608,"mtime":1609140522992,"results":"45","hashOfConfig":"41"},{"size":4602,"mtime":1610385870355,"results":"46","hashOfConfig":"41"},{"size":3646,"mtime":1609215120595,"results":"47","hashOfConfig":"41"},{"size":1202,"mtime":1610424316035,"results":"48","hashOfConfig":"41"},{"size":5762,"mtime":1610444926994,"results":"49","hashOfConfig":"41"},{"size":3644,"mtime":1609205129997,"results":"50","hashOfConfig":"41"},{"size":4176,"mtime":1610422199388,"results":"51","hashOfConfig":"41"},{"size":3564,"mtime":1609240397774,"results":"52","hashOfConfig":"41"},{"size":6068,"mtime":1610500551375,"results":"53","hashOfConfig":"41"},{"size":7072,"mtime":1610200059927,"results":"54","hashOfConfig":"41"},{"size":7464,"mtime":1610425080456,"results":"55","hashOfConfig":"41"},{"size":6591,"mtime":1610375722423,"results":"56","hashOfConfig":"41"},{"size":1506,"mtime":1609140522981,"results":"57","hashOfConfig":"41"},{"size":1652,"mtime":1610385765924,"results":"58","hashOfConfig":"41"},{"size":282,"mtime":1609140522976,"results":"59","hashOfConfig":"41"},{"size":1524,"mtime":1609140522979,"results":"60","hashOfConfig":"41"},{"size":405,"mtime":1609140522955,"results":"61","hashOfConfig":"41"},{"size":1330,"mtime":1610443223950,"results":"62","hashOfConfig":"41"},{"size":1296,"mtime":1610370280721,"results":"63","hashOfConfig":"41"},{"size":4657,"mtime":1610438872491,"results":"64","hashOfConfig":"41"},{"size":5829,"mtime":1610443793140,"results":"65","hashOfConfig":"41"},{"size":250,"mtime":1609140522959,"results":"66","hashOfConfig":"41"},{"size":347,"mtime":1609140522949,"results":"67","hashOfConfig":"41"},{"size":1508,"mtime":1609140522984,"results":"68","hashOfConfig":"41"},{"size":1050,"mtime":1610375694718,"results":"69","hashOfConfig":"41"},{"size":7920,"mtime":1610426352094,"results":"70","hashOfConfig":"41"},{"size":5855,"mtime":1610375867470,"results":"71","hashOfConfig":"41"},{"size":8438,"mtime":1610421584440,"results":"72","hashOfConfig":"41"},{"size":5376,"mtime":1610438338725,"results":"73","hashOfConfig":"41"},{"size":778,"mtime":1609140522964,"results":"74","hashOfConfig":"41"},{"size":15414,"mtime":1610500497149,"results":"75","hashOfConfig":"41"},{"size":5061,"mtime":1610424121153,"results":"76","hashOfConfig":"41"},{"size":708,"mtime":1610438214988,"results":"77","hashOfConfig":"41"},{"size":4659,"mtime":1610438470904,"results":"78","hashOfConfig":"41"},{"size":1779,"mtime":1610444894444,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"g4iz9r",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\index.js",[],["169","170"],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\App.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\store.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProductDetailScreen.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\SignupScreen.jsx",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\HomeScreen.jsx",["171","172","173"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n  Navbar,\r\n  Jumbotron,\r\n  Container,\r\n  FormControl,\r\n  Form,\r\n  Nav,\r\n  Button,\r\n  NavLink,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport '../App.css'\r\nimport { BsSearch, BsBag, BsFillPersonFill } from 'react-icons/bs'\r\nimport { FaStore } from 'react-icons/fa'\r\nimport { logout } from '../actions/userActions'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../Component/Loader'\r\nimport t9 from '../Assets/9.jpg'\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, products, error } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <main>\r\n      <div className='container-fluid p-0'>\r\n        <Navbar className='navbar-content-home' variant='dark'>\r\n          <NavLink className='home' href='/'>\r\n            InfoTech Shop\r\n          </NavLink>\r\n          <Navbar.Collapse className='justify-content-center'>\r\n            <Form inline>\r\n              <FormControl\r\n                type='text'\r\n                placeholder='Search..'\r\n                className='form-control'\r\n              />\r\n              <Button variant='outline-light'>\r\n                <BsSearch />\r\n              </Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n          <Nav className='justify-content-end'>\r\n            {userInfo && userInfo.admin && (\r\n              <NavLink className='cart' href='/product-list'>\r\n                <FaStore className='mb-1 mr-2' />\r\n                Daftar Produk\r\n              </NavLink>\r\n            )}\r\n            <NavLink className='cart' href='/cart'>\r\n              <BsBag className='mb-1 mr-2' />\r\n              CART\r\n            </NavLink>\r\n            {userInfo ? (\r\n              <>\r\n                <NavLink className='cart' href='/profile'>\r\n                  <BsFillPersonFill className='mb-1' />\r\n                  {userInfo.nama}\r\n                </NavLink>\r\n\r\n                <Nav.Item as={NavLink} onClick={logoutHandler} className='cart'>\r\n                  LOGOUT\r\n                </Nav.Item>\r\n              </>\r\n            ) : (\r\n              <NavLink className='cart' href='/Signup'>\r\n                <BsFillPersonFill className='mb-1 mr-2' />\r\n                SIGNUP\r\n              </NavLink>\r\n            )}\r\n          </Nav>\r\n        </Navbar>\r\n        <img src={t9} alt='' width='100%' />\r\n        <div className='row p-3'>\r\n          {error ? (\r\n            <h5>{error}</h5>\r\n          ) : loading ? (\r\n            <Loader />\r\n          ) : (\r\n            products.map((product) => (\r\n              <div className='col-sm-2 m-3 mt-4'>\r\n                <LinkContainer to={`/Product/${product._id}`}>\r\n                  <Image src={product.gambar} fluid />\r\n                </LinkContainer>\r\n                <Link\r\n                  to={`/Product/${product._id}`}\r\n                  className='font-weight-bold'\r\n                >\r\n                  {product.namaProduk}\r\n                </Link>\r\n                <h6>\r\n                  <b>\r\n                    Rp <span style={{ letterSpacing: 1 }}>{product.harga}</span>\r\n                  </b>\r\n                </h6>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <script\r\n          src='https://unpkg.com/react/umd/react.production.min.js'\r\n          crossorigin\r\n        ></script>\r\n\r\n        <script\r\n          src='https://unpkg.com/react-dom/umd/react-dom.production.min.js'\r\n          crossorigin\r\n        ></script>\r\n\r\n        <script\r\n          src='https://unpkg.com/react-bootstrap@next/dist/react-bootstrap.min.js'\r\n          crossorigin\r\n        ></script>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\LoginScreen.jsx",["174"],"import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n  Navbar,\r\n  InputGroup,\r\n  NavLink,\r\n  FormControl,\r\n  Button,\r\n} from 'react-bootstrap'\r\nimport '../App.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FaGoogle } from 'react-icons/fa'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst Login = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n  return (\r\n    <body>\r\n      <div className='container-fluid p-0 page-color'>\r\n        <Navbar className='navbar-content'>\r\n          <NavLink className='brand' href='/'>\r\n            InfoTech Shop\r\n          </NavLink>\r\n        </Navbar>\r\n        <div className='row'>\r\n          <div className='col-sm-7 p-5 mt-5 ml-5 pt-5'>\r\n            <h2>PROMO 12.12.</h2>\r\n            <br />\r\n            <h2>BELI 5,</h2>\r\n            <h2>NGGAK GRATIS APA-APA!</h2>\r\n            <br />\r\n            <h2>BURUAN BELI!</h2>\r\n            <h2>HARGA TERBAIK</h2>\r\n            <h2>PASTINYA TIDAK TERJANGKAU</h2>\r\n          </div>\r\n          <div className='col-sm-4 form-signup p-5 pr-2'>\r\n            <h4 className='signup-form m-1 mb-5 font-weight-bold'>Login</h4>\r\n            <InputGroup className='mb-4'>\r\n              <FormControl\r\n                type='email'\r\n                placeholder='Email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                aria-label='Email'\r\n                aria-describedby='basic-addon1'\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className='mb-4'>\r\n              <FormControl\r\n                type='password'\r\n                placeholder='Password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                aria-label='Password'\r\n                aria-describedby='basic-addon1'\r\n              />\r\n            </InputGroup>\r\n            <Button\r\n              type='submit'\r\n              onClick={submitHandler}\r\n              className='add-to-cart-button'\r\n              block\r\n            >\r\n              LOGIN\r\n            </Button>\r\n            <a href=''>Lupa Password</a>\r\n            <br />\r\n            <p className='text-center'>ATAU</p>\r\n            <Button type='submit' className='btn-form1' block>\r\n              <FaGoogle className='pb-1' size='5%' />\r\n              LOGIN\r\n            </Button>\r\n            <p className='text-center'>\r\n              belum punya akun? <a href='/Signup'>Signup</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <script\r\n          src='https://unpkg.com/react/umd/react.production.min.js'\r\n          crossorigin\r\n        ></script>\r\n\r\n        <script\r\n          src='https://unpkg.com/react-dom/umd/react-dom.production.min.js'\r\n          crossorigin\r\n        ></script>\r\n\r\n        <script\r\n          src='https://unpkg.com/react-bootstrap@next/dist/react-bootstrap.min.js'\r\n          crossorigin\r\n        ></script>\r\n      </div>\r\n    </body>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\CartScreen.jsx",["175"],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProductScreen.jsx",["176","177","178"],"import React, { useState, useEffect, Component } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n  Navbar,\r\n  InputGroup,\r\n  NavLink,\r\n  FormControl,\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Image,\r\n  Row,\r\n  Col,\r\n} from 'react-bootstrap'\r\nimport '../App.css'\r\nimport Loader from '../Component/Loader'\r\nimport { createProduct } from '../actions/productActions'\r\n\r\nconst Product = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [stock, setStock] = useState('')\r\n  const [price, setPrice] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n  const [image, setImage] = useState('')\r\n\r\n  const handleSelect = (e) => {\r\n    console.log(e)\r\n    setCategory(e)\r\n  }\r\n\r\n  const uploadHandler = async (e) => {\r\n    setUploading(true)\r\n\r\n    console.log(e.target.files[0])\r\n\r\n    const formData = new FormData()\r\n    formData.append('gambar', e.target.files[0])\r\n\r\n    await axios\r\n      .post('/api/produk/upload', formData)\r\n      .then((res) => {\r\n        setImage(res.data.url)\r\n      })\r\n      .catch((err) => console.log(err))\r\n\r\n    setUploading(false)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const { error, loading, success } = productCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push('/')\r\n    }\r\n  }, [history, success])\r\n\r\n  const submitHandler = () => {\r\n    dispatch(createProduct(name, desc, category, image, brand, stock, price))\r\n  }\r\n\r\n  return (\r\n    <body>\r\n      <div className='container-fluid p-0 page-color'>\r\n        <Navbar className='navbar-content'>\r\n          <NavLink className='brand' href='/'>\r\n            InfoTech Shop\r\n          </NavLink>\r\n        </Navbar>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className='row'>\r\n            <div className='col-sm-6 product-content mx-auto p-5 mt-3'>\r\n              <h1 className='text-center font-weight-bold text-white'>\r\n                Tambah Produk\r\n              </h1>\r\n              {error && <h4>{error}</h4>}\r\n              <Form.Group controlId='formBasicEmail' className='mt-3'>\r\n                <Form.Label className='font-weight-bold mt-3 text-white'>\r\n                  Nama Produk\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Form.Text className='text-muted text-white-50'>\r\n                  Kami akan menampilkan nama produk di halaman depan produk\r\n                  kamu.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Label className='font-weight-bold text-white'>\r\n                Kategori\r\n              </Form.Label>\r\n              <Dropdown onSelect={handleSelect}>\r\n                <Dropdown.Toggle variant='secondary' id='dropdown-basic'>\r\n                  {category}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item eventKey='Laptop'>Laptop</Dropdown.Item>\r\n                  <Dropdown.Item eventKey='Keyboard'>Keyboard</Dropdown.Item>\r\n                  <Dropdown.Item eventKey='Mouse'>Mouse</Dropdown.Item>\r\n                  <Dropdown.Item eventKey='Monitor'>Monitor</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <Form.Group\r\n                className='mt-3'\r\n                controlId='exampleForm.ControlTextarea1'\r\n              >\r\n                <Form.Label className='font-weight-bold text-white'>\r\n                  Deskripsi Produk\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as='textarea'\r\n                  rows={5}\r\n                  value={desc}\r\n                  onChange={(e) => setDesc(e.target.value)}\r\n                />\r\n                <Form.Text className='text-muted text-white-50'>\r\n                  Jelaskan produk kamu dengan lengkap berdasarkan kategori. cth:\r\n                  produk laptop kamu harus menjelaskan semua sepsifikasi yang\r\n                  ada seperti <i>Operating system</i>, VGA, Memori, Besar\r\n                  Penyimpanan, dll.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label className='font-weight-bold text-white'>\r\n                  Merek\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  value={brand}\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label className='font-weight-bold text-white'>\r\n                  Stok\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  value={stock}\r\n                  onChange={(e) => setStock(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Label className='font-weight-bold text-white'>\r\n                Harga\r\n              </Form.Label>\r\n              <InputGroup className='mb-3'>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Rp.</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  aria-label='Amount (to the nearest dollar)'\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n                <InputGroup.Append>\r\n                  <InputGroup.Text>.00</InputGroup.Text>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='font-weight-bold text-white'>\r\n                    Upload Foto Produk\r\n                  </Form.Label>\r\n                  <Form.File\r\n                    id='exampleFormControlFile1'\r\n                    onChange={(e) => uploadHandler(e)}\r\n                  />\r\n                  {uploading ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    image && (\r\n                      <Image\r\n                        src={image}\r\n                        style={{ width: '10rem' }}\r\n                        className='mt-2'\r\n                        fluid\r\n                      />\r\n                    )\r\n                  )}\r\n                </Form.Group>\r\n              </Form>\r\n              <Button\r\n                style={{ display: 'flex' }}\r\n                className='mx-auto px-5 py-2 btn-tambah'\r\n                onClick={submitHandler}\r\n              >\r\n                Tambah Produk\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </body>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\PlaceOrderScreen.jsx",["179"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Image,\r\n  Card,\r\n  Container,\r\n  Navbar,\r\n  NavLink,\r\n  FormControl,\r\n  Nav,\r\n  Form,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Component/Message'\r\nimport FormContainer from '../Component/FormContainer'\r\nimport CheckoutSteps from '../Component/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { logout } from '../actions/userActions'\r\nimport { BsFillPersonFill, BsBag, BsSearch } from 'react-icons/bs'\r\nimport { FaStore } from 'react-icons/fa'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n  const hargaBarang =\r\n    cartItems && cartItems.reduce((acc, cur) => acc + cur.harga * cur.qty, 0)\r\n\r\n  useEffect(() => {\r\n    if (!cart.shippingAddress) {\r\n      history.push('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n      history.push('/payment')\r\n    }\r\n  }, [cart, history])\r\n\r\n  //   Calculate prices\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder(\r\n        cartItems,\r\n        cart.shippingAddress,\r\n        cart.paymentMethod,\r\n        hargaBarang,\r\n        3000,\r\n        hargaBarang + 3000\r\n      )\r\n    )\r\n  }\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Container className='p-0' fluid>\r\n      <Navbar className='navbar-content-home' variant='dark'>\r\n        <NavLink className='home' href='/'>\r\n          InfoTech Shop\r\n        </NavLink>\r\n        <Navbar.Collapse className='justify-content-center'>\r\n          <Form inline>\r\n            <FormControl\r\n              type='text'\r\n              placeholder='Search..'\r\n              className='form-control'\r\n            />\r\n            <Button variant='outline-light'>\r\n              <BsSearch />\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n        <Nav className='justify-content-end'>\r\n          {userInfo && userInfo.admin && (\r\n            <NavLink className='cart' href='/product-list'>\r\n              <FaStore className='mb-1 mr-2' />\r\n              Daftar Produk\r\n            </NavLink>\r\n          )}\r\n          <NavLink className='cart' href='/cart'>\r\n            <BsBag className='mb-1 mr-2' />\r\n            CART\r\n          </NavLink>\r\n          {userInfo ? (\r\n            <>\r\n              <NavLink className='cart' href='/profile'>\r\n                <BsFillPersonFill className='mb-1 mr-2' />\r\n                {userInfo.nama}\r\n              </NavLink>\r\n              <Nav.Item as={NavLink} onClick={logoutHandler} className='cart'>\r\n                LOGOUT\r\n              </Nav.Item>\r\n            </>\r\n          ) : (\r\n            <NavLink className='cart' href='/Signup'>\r\n              <BsFillPersonFill className='mb-1 mr-2' />\r\n              SIGNUP\r\n            </NavLink>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n      <FormContainer>\r\n        <div className='place-page p-3 shipping-page mt-4'>\r\n          <CheckoutSteps step1 step2 step3 step4 />\r\n          <FormGroup variant='flush'>\r\n            <div className='keterangan'>\r\n              <h2 className='text-center font-weight-bold text-dark mb-3'>\r\n                Data Pembelian\r\n              </h2>\r\n              <h5 className='text-dark font-weight-bold'>Pengiriman</h5>\r\n              <p className='pl-3'>\r\n                <strong>Nama Penerima:</strong>{' '}\r\n                {cart.shippingAddress.namaPenerima}\r\n              </p>\r\n              <p className='pl-3'>\r\n                <div>\r\n                  <strong>Alamat</strong>: {cart.shippingAddress.alamat},{' '}\r\n                  {cart.shippingAddress.kelurahan},{' '}\r\n                  {cart.shippingAddress.kecamatan},{' '}\r\n                  {cart.shippingAddress.kabupaten},{' '}\r\n                  {cart.shippingAddress.kodepos}\r\n                </div>\r\n              </p>\r\n\r\n              <h5 className='text-dark font-weight-bold'>Pembayaran</h5>\r\n              <div className='pl-3'>\r\n                <strong>Metode:</strong> {cart.paymentMethod}\r\n              </div>\r\n              <h5 className='text-dark font-weight-bold mt-3 mb-3'>\r\n                Barang yang akan Dibeli\r\n              </h5>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <div>\r\n                  {cart.cartItems.map((item) => (\r\n                    <div key={item._id}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.gambar}\r\n                            alt={item.namaProduk}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/Product/${item._id}`}>\r\n                            {item.namaProduk}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rp. {item.harga} = Rp.{' '}\r\n                          {Number(item.qty * item.harga)}\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n        <div className='mt-3 shipping-page'>\r\n          <Card className='p-3'>\r\n            <div>\r\n              <h2 className='text-dark font-weight-bold text-center mb-3'>\r\n                Rincian Harga\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <Row className='my-1'>\r\n                <Col>Harga Barang</Col>\r\n                <Col>Rp. {hargaBarang}</Col>\r\n              </Row>\r\n            </div>\r\n            <div>\r\n              <Row className='my-1'>\r\n                <Col>Ongkir</Col>\r\n                <Col>Rp. 3000</Col>\r\n              </Row>\r\n            </div>\r\n            <div>\r\n              <Row className='my-1'>\r\n                <Col>Total Pembayaran</Col>\r\n                <Col>Rp. {hargaBarang + 3000}</Col>\r\n              </Row>\r\n            </div>\r\n            <div>{error && <Message variant='danger'>{error}</Message>}</div>\r\n            <div style={{ display: 'flex' }} className='mt-3 mb-1'>\r\n              <Button\r\n                type='button'\r\n                className='btn-block payment-button mx-auto'\r\n                disabled={cart.cartItems === 0}\r\n                onClick={placeOrderHandler}\r\n              >\r\n                Proses\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </FormContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ShippingScreen.jsx",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\userConstans.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Loader.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Rating.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\userActions.js",["180","181","182","183","184","185","186","187"],"import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstans'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/user/login/manual',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  })\r\n}\r\n\r\nexport const register = (nama, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/user/register/manual',\r\n      { nama, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProfil = (nama, email) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      '/api/user/update',\r\n      { nama, email },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get('/api/user/pengguna', config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.delete(`/api/user/hapus/${userId}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Message.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\FormContainer.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\CheckoutSteps.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\PaymentScreen.jsx",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProfileScreen.jsx",["188"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Navbar,\r\n  NavLink,\r\n  FormControl,\r\n  Nav,\r\n  Table,\r\n} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Component/Message'\r\nimport Loader from '../Component/Loader'\r\nimport { updateProfil, logout } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { BsFillPersonFill, BsBag, BsSearch } from 'react-icons/bs'\r\nimport { FaStore } from 'react-icons/fa'\r\nimport '../App.css'\r\nimport pict1 from '../Assets/1.jpg'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/')\r\n    } else {\r\n      setName(userInfo.nama)\r\n      setEmail(userInfo.email)\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_RESET,\r\n      })\r\n    }\r\n  }, [dispatch, success])\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders())\r\n  }, [dispatch])\r\n\r\n  // useEffect(() => {\r\n  //   if (!userInfo) {\r\n  //     history.push('/login')\r\n  //   }\r\n  //   else {\r\n  //     if (!user || !user.name || success) {\r\n  //       dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n  //       dispatch(getUserDetails('profile'))\r\n  //       dispatch(listMyOrders())\r\n  //     } else {\r\n  //       setName(user.name)\r\n  //       setEmail(user.email)\r\n  //     }\r\n  //   }\r\n  // }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateProfil(name, email))\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid p-0'>\r\n      <Navbar className='navbar-content-home' variant='dark'>\r\n        <NavLink className='home' href='/'>\r\n          InfoTech Shop\r\n        </NavLink>\r\n        <Navbar.Collapse className='justify-content-center'>\r\n          <Form inline>\r\n            <FormControl\r\n              type='text'\r\n              placeholder='Search..'\r\n              className='form-control'\r\n            />\r\n            <Button variant='outline-light'>\r\n              <BsSearch />\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n        <Nav className='justify-content-end'>\r\n          {userInfo && userInfo.admin && (\r\n            <NavLink className='cart' href='/product-list'>\r\n              <FaStore className='mb-1 mr-2' />\r\n              Daftar Produk\r\n            </NavLink>\r\n          )}\r\n          <NavLink className='cart' href='/cart'>\r\n            <BsBag className='mb-1 mr-2' />\r\n            CART\r\n          </NavLink>\r\n          {userInfo ? (\r\n            <>\r\n              <NavLink className='cart' href='/profile'>\r\n                <BsFillPersonFill className='mb-1 mr-2' />\r\n                {userInfo.nama}\r\n              </NavLink>\r\n              <Nav.Item as={NavLink} onClick={logoutHandler} className='cart'>\r\n                LOGOUT\r\n              </Nav.Item>\r\n            </>\r\n          ) : (\r\n            <NavLink className='cart' href='/Signup'>\r\n              <BsFillPersonFill className='mb-1 mr-2' />\r\n              SIGNUP\r\n            </NavLink>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n      <Row className='mx-4'>\r\n        <Col md={12} className='profile-screen mt-3 pb-3'>\r\n          <h2 className='text-center text-dark mt-2 mb-4'>Profil</h2>\r\n          <Row>\r\n            <Col md={4} style={{ display: 'flex' }}>\r\n              <Image className='mx-auto' src={pict1} />\r\n            </Col>\r\n            <Col md={7} className='mx-auto'>\r\n              {success && <Message variant='success'>Profile Updated</Message>}\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n              ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId='name'>\r\n                    <Form.Label className='text-dark font-weight-bold'>\r\n                      Nama\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='name'\r\n                      placeholder='Masukkan Nama'\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='email'>\r\n                    <Form.Label className='text-dark font-weight-bold'>\r\n                      Alamat Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='email'\r\n                      placeholder='Masukkan'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <Button\r\n                      type='submit'\r\n                      variant='secondary'\r\n                      className='mx-auto'\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={12} className='mt-3 mb-3 profile-screen'>\r\n          <h2 className='text-center font-weight-bold text-dark my-3'>\r\n            Pesanan Saya\r\n          </h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message variant='danger'>{errorOrders}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead className='table-dark text-center'>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>PRODUK</th>\r\n                  <th>TOTAL</th>\r\n                  <th>STATUS</th>\r\n                  <th>DETAIL</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>\r\n                      {order.barangPesanan.length === 1 ? (\r\n                        order.barangPesanan[0].namaProduk\r\n                      ) : (\r\n                        <ul className='px-3'>\r\n                          {order.barangPesanan.map((x) => (\r\n                            <li key={x._id}>{x.namaProduk}</li>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </td>\r\n                    <td>Rp. {order.totalPembayaran}</td>\r\n                    <td className='text-center'>\r\n                      {!order.sudahBayar ? (\r\n                        <Badge variant='danger'>Belum dibayar</Badge>\r\n                      ) : order.sudahDikirim ? (\r\n                        <Badge variant='primary'>Sudah dikirim</Badge>\r\n                      ) : (\r\n                        <Badge variant='success'>Sudah dibayar</Badge>\r\n                      )}\r\n                    </td>\r\n                    <td className='text-center'>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button className='btn-sm' variant='secondary'>\r\n                          Lihat Detail\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\ProductListScreen.jsx",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Paginate.js",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\OrderScreen.jsx",["189","190","191","192","193","194","195","196","197","198","199"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Badge,\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Navbar,\r\n  NavLink,\r\n  FormControl,\r\n  Nav,\r\n  Form,\r\n  Alert,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Component/Message'\r\nimport Loader from '../Component/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n  sendReceipt,\r\n  getReceipt,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\nimport '../App.css'\r\nimport { logout } from '../actions/userActions'\r\nimport { BsFillPersonFill, BsBag, BsSearch } from 'react-icons/bs'\r\nimport { FaStore } from 'react-icons/fa'\r\nimport { MdEmail, MdPayment, MdLocalShipping } from 'react-icons/md'\r\nimport { FiMapPin } from 'react-icons/fi'\r\nimport { ImPriceTag } from 'react-icons/im'\r\nimport { GrDocumentStore } from 'react-icons/gr'\r\nimport { AiFillShopping } from 'react-icons/ai'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderGetReceipt = useSelector((state) => state.orderGetReceipt)\r\n  const { receipt } = orderGetReceipt\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(orderId))\r\n    dispatch(getReceipt(match.params.id))\r\n  }, [dispatch, orderId, match])\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n\r\n  const payHandler = () => {\r\n    if (window.confirm('Apakah anda yakin ingin mengubah status pembayaran?')) {\r\n      dispatch(payOrder(orderId))\r\n      history.go(0)\r\n    }\r\n  }\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n\r\n  const deliverHandler = () => {\r\n    if (window.confirm('Apakah anda yakin ingin mengubah status pengiriman?')) {\r\n      dispatch(deliverOrder(orderId))\r\n      history.go(0)\r\n    }\r\n  }\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // order.itemsPrice = addDecimals(\r\n    //   order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    // )\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   // if (!userInfo) {\r\n  //   //   history.push('/login')\r\n  //   // }\r\n\r\n  //   const addPayPalScript = async () => {\r\n  //     const { data: clientId } = await axios.get('/api/config/paypal')\r\n  //     const script = document.createElement('script')\r\n  //     script.type = 'text/javascript'\r\n  //     script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n  //     script.async = true\r\n  //     script.onload = () => {\r\n  //       setSdkReady(true)\r\n  //     }\r\n  //     document.body.appendChild(script)\r\n  //   }\r\n\r\n  //   if (!order || successPay || successDeliver || order._id !== orderId) {\r\n  //     dispatch({ type: ORDER_PAY_RESET })\r\n  //     dispatch({ type: ORDER_DELIVER_RESET })\r\n  //     dispatch(getOrderDetails(orderId))\r\n  //   } else if (!order.isPaid) {\r\n  //     if (!window.paypal) {\r\n  //       addPayPalScript()\r\n  //     } else {\r\n  //       setSdkReady(true)\r\n  //     }\r\n  //   }\r\n  // }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n  const [image, setImage] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const uploadHandler = async (e) => {\r\n    setUploading(true)\r\n\r\n    console.log(e.target.files)\r\n\r\n    const formData = new FormData()\r\n    formData.append('bukti', e.target.files[0])\r\n\r\n    await axios\r\n      .post('/api/order/bukti', formData)\r\n      .then((res) => {\r\n        setImage(res.data.url)\r\n      })\r\n      .catch((err) => console.log(err))\r\n\r\n    setUploading(false)\r\n  }\r\n\r\n  const orderReceipt = useSelector((state) => state.orderReceipt)\r\n  const { success: successSendReceipt } = orderReceipt\r\n\r\n  useEffect(() => {\r\n    if (successSendReceipt) {\r\n      alert('Bukti pembayaran berhasil dikirim')\r\n    }\r\n  }, [successSendReceipt])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(sendReceipt(image, orderId))\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Container className='p-0' fluid>\r\n      <Navbar className='navbar-content-home' variant='dark'>\r\n        <NavLink className='home' href='/'>\r\n          InfoTech Shop\r\n        </NavLink>\r\n        <Navbar.Collapse className='justify-content-center'>\r\n          <Form inline>\r\n            <FormControl\r\n              type='text'\r\n              placeholder='Search..'\r\n              className='form-control'\r\n            />\r\n            <Button variant='outline-light'>\r\n              <BsSearch />\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n        <Nav className='justify-content-end'>\r\n          {userInfo && userInfo.admin && (\r\n            <NavLink className='cart' href='/product-list'>\r\n              <FaStore className='mb-1 mr-2' />\r\n              Daftar Produk\r\n            </NavLink>\r\n          )}\r\n          <NavLink className='cart' href='/cart'>\r\n            <BsBag className='mb-1 mr-2' />\r\n            CART\r\n          </NavLink>\r\n          {userInfo ? (\r\n            <>\r\n              <NavLink className='cart' href='/profile'>\r\n                <BsFillPersonFill className='mb-1 mr-2' />\r\n                {userInfo.nama}\r\n              </NavLink>\r\n              <Nav.Item as={NavLink} onClick={logoutHandler} className='cart'>\r\n                LOGOUT\r\n              </Nav.Item>\r\n            </>\r\n          ) : (\r\n            <NavLink className='cart' href='/Signup'>\r\n              <BsFillPersonFill className='mb-1 mr-2' />\r\n              SIGNUP\r\n            </NavLink>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className='container'>\r\n          <Row style={{ display: 'flex' }}>\r\n            <Col md={5} className='mx-auto mt-4 mb-2'>\r\n              <h2 className='text-center py-1 text-dark font-weight-bold'>\r\n                Status Pembelian Barang\r\n              </h2>\r\n            </Col>\r\n          </Row>\r\n          {order && (\r\n            <Row className='my-3'>\r\n              <Col md={8}>\r\n                <ListGroup variant='flush' className='order-content'>\r\n                  <ListGroup.Item>\r\n                    <h2 className='text-center text-dark my-1'>Pengiriman</h2>\r\n                    <p>\r\n                      <BsFillPersonFill size='20px' className='m-0' />\r\n                      <strong className='m-2'>Nama: </strong>\r\n                      {order.namaPembeli}\r\n                    </p>\r\n                    <p>\r\n                      <MdEmail size='20px' className='m-0' />\r\n                      <strong className='m-2'>Email: </strong>{' '}\r\n                      {order.emailPembeli}\r\n                    </p>\r\n                    <p>\r\n                      <FiMapPin size='20px' className='m-0' />\r\n                      <strong className='m-2'>Alamat: </strong>\r\n                      {`${order.alamatPengiriman.alamat}, ${order.alamatPengiriman.kelurahan}, ${order.alamatPengiriman.kecamatan}, ${order.alamatPengiriman.kabupaten}`}\r\n                    </p>\r\n                    <p>\r\n                      <MdLocalShipping size='20px' className='m-0' />\r\n                      <strong className='m-2'>Status Pengiriman: </strong>\r\n                      {order.sudahDikirim ? (\r\n                        <Badge variant='primary'>Sudah dikirim</Badge>\r\n                      ) : (\r\n                        <Badge variant='secondary'>Belum dikirim</Badge>\r\n                      )}\r\n                    </p>\r\n                    {userInfo.admin && !order.sudahDikirim && (\r\n                      <Button\r\n                        className='ml-5'\r\n                        onClick={deliverHandler}\r\n                        variant='primary'\r\n                        size='sm'\r\n                      >\r\n                        Ubah status pengiriman\r\n                      </Button>\r\n                    )}\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <h2 className='text-center text-dark mt-3 mb-5'>\r\n                      Metode Pembayaran\r\n                    </h2>\r\n                    <p>\r\n                      <MdPayment size='20px' className='m-0' />\r\n                      <strong className='m-2'>Metode: </strong>\r\n                      {order.metodePembayaran}\r\n                    </p>\r\n                    <p>\r\n                      <MdPayment size='20px' className='m-0' />\r\n                      <strong className='m-2'>Kode Pembayaran: </strong>\r\n                      {order.kodePembayaran.split('u')[0]}\r\n                    </p>\r\n                    <p>\r\n                      <MdPayment size='20px' className='m-0' />\r\n                      <strong className='m-2'>Status Pembayaran: </strong>\r\n                      {order.sudahBayar ? (\r\n                        <Badge variant='success'>Sudah dibayar</Badge>\r\n                      ) : (\r\n                        <Badge variant='danger'>Belum dibayar</Badge>\r\n                      )}\r\n                    </p>\r\n                    {userInfo.admin && !order.sudahBayar && (\r\n                      <Button\r\n                        className='ml-5'\r\n                        onClick={payHandler}\r\n                        variant='success'\r\n                        size='sm'\r\n                      >\r\n                        Ubah status pembayaran\r\n                      </Button>\r\n                    )}\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <h2 className='text-center text-dark mt-3 mb-5'>\r\n                      Daftar Barang\r\n                    </h2>\r\n                    {order.barangPesanan && order.barangPesanan.length === 0 ? (\r\n                      <Message>Order is empty</Message>\r\n                    ) : (\r\n                      <ListGroup variant='flush'>\r\n                        {order.barangPesanan.map((item, index) => (\r\n                          <ListGroup.Item key={index}>\r\n                            <Row>\r\n                              <Col md={1}>\r\n                                <Image\r\n                                  src={item.gambar}\r\n                                  alt={item.namaProduk}\r\n                                  fluid\r\n                                  rounded\r\n                                />\r\n                              </Col>\r\n                              <Col>\r\n                                <Link to={`/product`}>{item.namaProduk}</Link>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                {item.qty} x Rp. {item.harga} = Rp.{' '}\r\n                                {item.qty * item.harga}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col md={4} className='my-auto order-content'>\r\n                <h2 className='text-center text-dark mt-3 mb-4'>\r\n                  Total Pembayaran\r\n                </h2>\r\n                <Row className='my-4 ml-0'>\r\n                  <AiFillShopping className='mt-1 ml-2' />\r\n                  <Col>Barang: </Col>\r\n                  <Col>\r\n                    Rp.{' '}\r\n                    {order.barangPesanan.reduce(\r\n                      (acc, cur) => acc + cur.qty * cur.harga,\r\n                      0\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row className='my-4 ml-0'>\r\n                  <MdLocalShipping className='mt-1 ml-2' />\r\n                  <Col>Pengiriman: </Col>\r\n                  <Col>Rp. {order.ongkir}</Col>\r\n                </Row>\r\n                <Row className='my-4 ml-0'>\r\n                  <ImPriceTag className='mt-1 ml-2' />\r\n                  <Col>Total: </Col>\r\n                  <Col>Rp. {order.totalPembayaran}</Col>\r\n                </Row>\r\n                <Row className='px-4'>\r\n                  {userInfo.admin && receipt && receipt.length > 0 ? (\r\n                    <a\r\n                      className='mx-auto py-3'\r\n                      target='blank'\r\n                      href={receipt[receipt.length - 1].bukti[0]}\r\n                    >\r\n                      <Button variant='info' size='sm'>\r\n                        Lihat bukti pembayaran\r\n                      </Button>\r\n                    </a>\r\n                  ) : userInfo.admin && receipt && receipt.length === 0 ? (\r\n                    <Alert className='mx-auto' variant='danger'>\r\n                      Belum ada bukti pembayaran\r\n                    </Alert>\r\n                  ) : (\r\n                    !order.sudahBayar && (\r\n                      <Form onSubmit={submitHandler}>\r\n                        <Form.Group>\r\n                          <Form.Label>Upload Bukti Pembayaran</Form.Label>\r\n                          <Form.File onChange={(e) => uploadHandler(e)} />\r\n                          {uploading ? (\r\n                            <Loader />\r\n                          ) : (\r\n                            image && (\r\n                              <Image\r\n                                src={image}\r\n                                className='mt-3'\r\n                                style={{ width: '7rem' }}\r\n                              />\r\n                            )\r\n                          )}\r\n                          <Button className='mt-4 d-block' type='submit'>\r\n                            Submit\r\n                          </Button>\r\n                        </Form.Group>\r\n                      </Form>\r\n                    )\r\n                  )}\r\n                </Row>\r\n                {/* {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item> */}\r\n                {/* )} */}\r\n                {/* {loadingDeliver && <Loader />}\r\n            {userInfo &&\r\n              userInfo.isAdmin &&\r\n              order.isPaid &&\r\n              !order.isDelivered && (\r\n                <Button\r\n                  type='button'\r\n                  className='btn btn-block my-2'\r\n                  onClick={deliverHandler}\r\n                >\r\n                  Mark As Delivered\r\n                </Button>\r\n              )} */}\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\OrderListScreen.jsx",["200"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n  Table,\r\n  Button,\r\n  Badge,\r\n  Navbar,\r\n  NavLink,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Component/Message'\r\nimport Loader from '../Component/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { logout } from '../actions/userActions'\r\nimport { BsFillPersonFill, BsBag, BsSearch } from 'react-icons/bs'\r\nimport { FaStore } from 'react-icons/fa'\r\nimport '../App.css'\r\nimport ListLink from '../Component/ListLink'\r\n\r\nconst OrderListScreen = ({ history, location }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.admin) {\r\n      dispatch(listOrders())\r\n    }\r\n    // else {\r\n    //   history.push('/login')\r\n    // }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar className='navbar-content-home' variant='dark'>\r\n        <NavLink className='home' href='/'>\r\n          InfoTech Shop\r\n        </NavLink>\r\n        <Navbar.Collapse className='justify-content-center'>\r\n          <Form inline>\r\n            <FormControl\r\n              type='text'\r\n              placeholder='Search..'\r\n              className='form-control'\r\n            />\r\n            <Button variant='outline-light'>\r\n              <BsSearch />\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n        <Nav className='justify-content-end'>\r\n          {userInfo && userInfo.admin && (\r\n            <NavLink className='cart' href='/product-list'>\r\n              <FaStore className='mb-1 mr-2' />\r\n              Daftar Produk\r\n            </NavLink>\r\n          )}\r\n          <NavLink className='cart' href='/cart'>\r\n            <BsBag className='mb-1 mr-2' />\r\n            CART\r\n          </NavLink>\r\n          {userInfo ? (\r\n            <>\r\n              <NavLink className='cart' href='/profile'>\r\n                <BsFillPersonFill className='mb-1 mr-2' />\r\n                {userInfo.nama}\r\n              </NavLink>\r\n              <Nav.Item as={NavLink} onClick={logoutHandler} className='cart'>\r\n                LOGOUT\r\n              </Nav.Item>\r\n            </>\r\n          ) : (\r\n            <NavLink className='cart' href='/Signup'>\r\n              <BsFillPersonFill className='mb-1 mr-2' />\r\n              SIGNUP\r\n            </NavLink>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n      <div className='orderlist-page m-3 p-3'>\r\n        <ListLink />\r\n        <h1 className='text-center font-weight-bold mb-3'>Pesanan</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead className='table-bordered table-danger text-center'>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>PENGGUNA</th>\r\n                <th>TANGGAL</th>\r\n                <th>TOTAL</th>\r\n                <th>PEMBAYARAN</th>\r\n                <th>PENGIRIMAN</th>\r\n                <th>Detail</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.namaPembeli}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>Rp. {order.totalPembayaran}</td>\r\n                  <td className='text-center'>\r\n                    {order.sudahBayar ? (\r\n                      <Badge variant='success'>Sudah dibayar</Badge>\r\n                    ) : (\r\n                      <Badge variant='danger'>Belum dibayar</Badge>\r\n                    )}\r\n                  </td>\r\n                  <td className='text-center'>\r\n                    {order.sudahDikirim ? (\r\n                      <Badge variant='primary'>Sudah dikirim</Badge>\r\n                    ) : (\r\n                      <Badge variant='secondary'>Belum dikirim</Badge>\r\n                    )}\r\n                  </td>\r\n                  <td className='text-center'>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button\r\n                        variant='info'\r\n                        size='sm'\r\n                        className='text-white font-weight-bold'\r\n                      >\r\n                        Lihat Detail\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\ListLink.js",["201"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Badge } from 'react-bootstrap'\r\n\r\nconst ListLink = () => {\r\n  return (\r\n    <>\r\n      <Row className='mt-3'>\r\n        <Col className='text-center'>\r\n          <Link to='/product-list'>\r\n            <h5>Daftar Produk</h5>\r\n          </Link>\r\n        </Col>\r\n        <Col className='text-center'>\r\n          <Link to='/order-list'>\r\n            <h5>Daftar Pesanan</h5>\r\n          </Link>\r\n        </Col>\r\n        <Col className='text-center'>\r\n          <Link to='/user-list'>\r\n            <h5>Daftar Pengguna</h5>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListLink\r\n","C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\screens\\UserListScreen.jsx",[],"C:\\Users\\ASUS\\Coding\\Web Project\\infotech-shop\\frontend\\src\\Component\\Review.js",["202"],"import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { createProductReview } from '../actions/productActions'\r\n\r\nconst Review = ({ productId }) => {\r\n  const [value, setValue] = useState(1)\r\n  const [review, setReview] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const changeHandler = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const { success } = productReviewCreate\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(productId, review, value))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form className='pl-4' style={{ width: '100%' }} onSubmit={submitHandler}>\r\n        <Form.Row>\r\n          <Form.Control\r\n            as='select'\r\n            className='p-1'\r\n            style={{ width: '4rem' }}\r\n            onChange={changeHandler}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n            <option value={4}>4</option>\r\n            <option value={5}>5</option>\r\n          </Form.Control>\r\n          <Col className='pl-3'>\r\n            <Rating value={value} />\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row className='py-3'>\r\n          <Form.Control\r\n            placeholder='Berikan Review Anda'\r\n            value={review}\r\n            onChange={(e) => setReview(e.target.value)}\r\n            style={{ width: '90%' }}\r\n          />\r\n          <Col>\r\n            <Button type='submit'>Kirim</Button>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Review\r\n",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":7,"column":3,"nodeType":"209","messageId":"210","endLine":7,"endColumn":12},{"ruleId":"207","severity":1,"message":"211","line":8,"column":3,"nodeType":"209","messageId":"210","endLine":8,"endColumn":12},{"ruleId":"207","severity":1,"message":"212","line":15,"column":3,"nodeType":"209","messageId":"210","endLine":15,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":86,"column":13,"nodeType":"215","endLine":86,"endColumn":24},{"ruleId":"207","severity":1,"message":"216","line":46,"column":9,"nodeType":"209","messageId":"210","endLine":46,"endColumn":24},{"ruleId":"207","severity":1,"message":"217","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":47},{"ruleId":"207","severity":1,"message":"218","line":14,"column":3,"nodeType":"209","messageId":"210","endLine":14,"endColumn":6},{"ruleId":"207","severity":1,"message":"219","line":15,"column":3,"nodeType":"209","messageId":"210","endLine":15,"endColumn":6},{"ruleId":"220","severity":1,"message":"221","line":55,"column":6,"nodeType":"222","endLine":55,"endColumn":24,"suggestions":"223"},{"ruleId":"207","severity":1,"message":"224","line":3,"column":3,"nodeType":"209","messageId":"210","endLine":3,"endColumn":20},{"ruleId":"207","severity":1,"message":"225","line":4,"column":3,"nodeType":"209","messageId":"210","endLine":4,"endColumn":23},{"ruleId":"207","severity":1,"message":"226","line":5,"column":3,"nodeType":"209","messageId":"210","endLine":5,"endColumn":23},{"ruleId":"207","severity":1,"message":"227","line":16,"column":3,"nodeType":"209","messageId":"210","endLine":16,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":20,"column":3,"nodeType":"209","messageId":"210","endLine":20,"endColumn":18},{"ruleId":"207","severity":1,"message":"229","line":24,"column":3,"nodeType":"209","messageId":"210","endLine":24,"endColumn":19},{"ruleId":"207","severity":1,"message":"230","line":25,"column":3,"nodeType":"209","messageId":"210","endLine":25,"endColumn":22},{"ruleId":"207","severity":1,"message":"231","line":26,"column":3,"nodeType":"209","messageId":"210","endLine":26,"endColumn":22},{"ruleId":"207","severity":1,"message":"232","line":31,"column":27,"nodeType":"209","messageId":"210","endLine":31,"endColumn":31},{"ruleId":"207","severity":1,"message":"233","line":10,"column":3,"nodeType":"209","messageId":"210","endLine":10,"endColumn":7},{"ruleId":"207","severity":1,"message":"234","line":31,"column":3,"nodeType":"209","messageId":"210","endLine":31,"endColumn":18},{"ruleId":"207","severity":1,"message":"235","line":32,"column":3,"nodeType":"209","messageId":"210","endLine":32,"endColumn":22},{"ruleId":"207","severity":1,"message":"236","line":41,"column":10,"nodeType":"209","messageId":"210","endLine":41,"endColumn":25},{"ruleId":"207","severity":1,"message":"237","line":47,"column":10,"nodeType":"209","messageId":"210","endLine":47,"endColumn":18},{"ruleId":"207","severity":1,"message":"238","line":47,"column":20,"nodeType":"209","messageId":"210","endLine":47,"endColumn":31},{"ruleId":"207","severity":1,"message":"239","line":52,"column":27,"nodeType":"209","messageId":"210","endLine":52,"endColumn":32},{"ruleId":"207","severity":1,"message":"240","line":62,"column":9,"nodeType":"209","messageId":"210","endLine":62,"endColumn":17},{"ruleId":"207","severity":1,"message":"241","line":71,"column":9,"nodeType":"209","messageId":"210","endLine":71,"endColumn":21},{"ruleId":"207","severity":1,"message":"242","line":85,"column":11,"nodeType":"209","messageId":"210","endLine":85,"endColumn":22},{"ruleId":"207","severity":1,"message":"243","line":159,"column":9,"nodeType":"209","messageId":"210","endLine":159,"endColumn":30},{"ruleId":"207","severity":1,"message":"244","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"245","line":3,"column":20,"nodeType":"209","messageId":"210","endLine":3,"endColumn":25},{"ruleId":"207","severity":1,"message":"246","line":18,"column":11,"nodeType":"209","messageId":"210","endLine":18,"endColumn":18},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'NavDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'checkoutHandler' is assigned a value but never used.","'Component' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["249"],"'USER_DETAILS_FAIL' is defined but never used.","'USER_DETAILS_REQUEST' is defined but never used.","'USER_DETAILS_SUCCESS' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","'USER_LIST_RESET' is defined but never used.","'USER_UPDATE_FAIL' is defined but never used.","'USER_UPDATE_SUCCESS' is defined but never used.","'USER_UPDATE_REQUEST' is defined but never used.","'user' is assigned a value but never used.","'Card' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'GrDocumentStore' is defined but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'error' is assigned a value but never used.","'orderPay' is assigned a value but never used.","'orderDeliver' is assigned a value but never used.","'addDecimals' is assigned a value but never used.","'successPaymentHandler' is assigned a value but never used.","'Link' is defined but never used.","'Badge' is defined but never used.","'success' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},"Update the dependencies array to be: [dispatch, history, order._id, success]",{"range":"252","text":"253"},[1596,1614],"[dispatch, history, order._id, success]"]